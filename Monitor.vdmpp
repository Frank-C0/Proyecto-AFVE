class Monitor

  types
    public EstadosSensoresSism ::
        cambioTemperatura: SensorGeoterm`CambioTemp
        magnitudSism: SensorSism`MagnitudSismo
        actividad: SensorSism`EstadoSism;

    public EstadoVolcan = 
      <Normal> | <Precaucion> | <Peligro> | <Evacuacion> | <Emergencia>;

  instance variables
    private id: nat1;
    private volcan: Volcan;
    -- private EstadosSensoresToEstado: map EstadoVolcan to EstadosSensoresSism;
    private alarma: EstadoVolcan;  -- El estado de alarma ahora es una variable independiente


    
  operations

    public Monitor
      : nat1 * Volcan ==> Monitor
    Monitor(i, v)
      ==
      (
        id := i;
        
        volcan := v;
        -- EstadosSensoresToEstado := estadosSensores;
        alarma := <Normal>;
        return self;
      )

      pre i > 0 and v.GetListaSensoresGeoterm() <> [] and v.GetListaSensoresSism() <> [];

    -- Obtener el ID del monitor
    public GetID: () ==> nat1
    GetID() == return id;

    -- Obtener el volcán asociado al monitor
    public GetVolcan: () ==> Volcan
    GetVolcan() == return volcan;

    -- Obtener el estado de alarma del monitor
    public GetAlarma: () ==> EstadoVolcan
    GetAlarma() == return alarma;

    -- Obtener el estado de los sensores sísmicos asociados al estado de alarma
    -- public GetEstadosSensores: () ==> EstadosSensoresSism
    -- GetEstadosSensores() == return EstadosSensoresToEstado(alarma);

    --  Obtener la lectura más alta de los sensores geotérmicos
    private ObtenerMaximaLecturaGeotermica: () ==> SensorGeoterm`CambioTemp
    ObtenerMaximaLecturaGeotermica() ==
      (
        -- if len volcan.GetListaSensoresGeoterm() = 0 then
        --   return SensorGeoterm`ClasificarCambioTemperatura(
        -- else
        let listaSensoresGeoterm: seq of SensorGeoterm = volcan.GetListaSensoresGeoterm() in
        (
          dcl maxLecturaSensor: real := listaSensoresGeoterm(1).GetUltimoCambioTemperatura(); -- Supongamos que GetNuevaTemp devuelve la temperatura
          
          for sensorGeotermico in listaSensoresGeoterm do
            if sensorGeotermico.GetUltimoCambioTemperatura() > maxLecturaSensor then
              maxLecturaSensor := sensorGeotermico.GetUltimoCambioTemperatura();
          
          return SensorGeoterm`ClasificarCambioTemperatura(maxLecturaSensor);
        )
      );

    private ObtenerMaximaLecturaMagnitud: () ==> SensorSism`MagnitudSismo
    ObtenerMaximaLecturaMagnitud() ==
      (
        let listaSensoresSism: seq of SensorSism= volcan.GetListaSensoresSism() in
        (
          dcl maxLecturaSensor: real := listaSensoresSism(1).GetMagnitudActual();
          
          for sensorSism in listaSensoresSism do
            if sensorSism.GetMagnitudActual() > maxLecturaSensor then
              maxLecturaSensor := sensorSism.GetMagnitudActual();
          
          return SensorSism`ClasificarMagnitudSismo(maxLecturaSensor);
        )
      );

    private ObtenerMaximaLecturaActividad: () ==> SensorSism`EstadoSism
    ObtenerMaximaLecturaActividad() ==
      (
        let listaSensoresSism: seq of SensorSism= volcan.GetListaSensoresSism() in
        (
          dcl maxLecturaSensor: real := listaSensoresSism(1).GetNumActividad(); 
          
          for sensorSism in listaSensoresSism do
            if sensorSism.GetNumActividad() > maxLecturaSensor then
              maxLecturaSensor := sensorSism.GetNumActividad();
          
          return SensorSism`ClasificarActividadSismica(maxLecturaSensor);
        )
      );
      
    public ActualizarEstado: () ==> ()
    ActualizarEstado() == (
      alarma := mapEstado(
        ObtenerMaximaLecturaMagnitud(),
        ObtenerMaximaLecturaActividad(),
        ObtenerMaximaLecturaGeotermica()
        );
    );


    -- public mapEstado: SensorSism`MagnitudSismo * SensorSism`EstadoSism * SensorGeoterm`CambioTemp ==> EstadoVolcan
    -- mapEstado(magnitudSism, actividad, cambioTemperatura) == (
    --   if magnitudSism = <terremotosMuyGrandes> then
    --     return <Emergencia>
    --   elseif magnitudSism = <grandesTerremotos> then
    --     return <Emergencia>
    --   elseif magnitudSism = <terremotosMayores> then
    --     if actividad = <muyActivo> then
    --       return <Emergencia>
    --     else 
    --       return <Evacuacion>
    --   elseif magnitudSism = <terremotosFuertes> then
    --     if actividad = <muyActivo> then
    --       return <Emergencia>
    --     elseif actividad = <moderadamenteActivo> then
    --       return <Evacuacion>
    --     else
    --       return <Peligro>
    --   elseif magnitudSism = <terremotosModerados> then
    --     if actividad = <muyActivo> then
    --       return <Emergencia>
    --     elseif actividad = <moderadamenteActivo> or actividad = <pocoActivo> then
    --       return <Peligro>
    --     else
    --       if cambioTemperatura = <Brusco> then
    --         return <Peligro>
    --       else
    --         return <Precaucion> 
    --   elseif magnitudSism = <pequenosTerremotos> then 
    --     if actividad = <muyActivo> then
    --       return <Evacuacion>
    --     elseif actividad = <moderadamenteActivo> then
    --       return <Peligro>
    --     else
    --       return <Precaucion>
    --   elseif magnitudSism = <microTerremotos> then
    --     if actividad = <muyActivo> then
    --       return <Evacuacion>
    --     elseif actividad = <moderadamenteActivo> then
    --       return <Peligro>
    --     -- else actividad = <pocoActivo> then
    --     else 
    --       return <Precaucion>
    --     -- else
    --     --   if cambioTemperatura = <Brusco> then
    --     --     return <Precaucion>
    --     --   else
    --     --     return <Normal>
    --   else
    --     if actividad = <muyActivo> then
    --       return <Precaucion>
    --     else
    --       return <Normal>


      
    -- );
    
private mapEstado: SensorSism`MagnitudSismo * SensorSism`EstadoSism * SensorGeoterm`CambioTemp ==> EstadoVolcan
mapEstado(magnitudSism, actividad, cambioTemperatura) ==
  (
    if magnitudSism = <grandesTerremotos> or
       magnitudSism = <terremotosMuyGrandes> or
       magnitudSism = <terremotosMayores> or
       magnitudSism = <terremotosFuertes>
    then
      return <Emergencia>
    elseif cambioTemperatura = <Brusco> then
      if actividad = <muyActivo> then
        if magnitudSism = <noterremoto> then
          return <Peligro>
        else
          return <Evacuacion>
      elseif magnitudSism = <terremotosModerados> then
        return <Evacuacion>
      else
        return <Peligro>
    elseif actividad = <muyActivo> then
      if magnitudSism = <terremotosModerados> then
        return <Evacuacion>
      else
        return <Peligro>
    elseif magnitudSism = <terremotosModerados> then
      return <Peligro>
    elseif magnitudSism = <noterremoto> then
      return <Normal>
    else
      return <Precaucion>
  );


end Monitor