class Test
instance variables
  sensorSism1: SensorSism;
  sensorSism2: SensorSism;
  sensorSismMagnitud: SensorSism`MagnitudSismo;
  sensorSismactividad: SensorSism`EstadoSism;


  sensorGeoterm1: SensorGeoterm;
  sensorGeoterm2: SensorGeoterm;
  sensorGeoterm: SensorGeoterm`CambioTemp;

  sensorUbicacion: Sensor`Position;
  sensorDate: Sensor`Date;

  volcan1: Volcan;
  volcanNombre: seq of char;

  monitor: Monitor;
  monitorEstadoAlarma: Monitor`EstadoVolcan;

  id: nat1;
operations
  public Run: () ==> ()
  Run() == (
      testGeneral();
    );

  public initPocoActivo: () ==> ()
  initPocoActivo() == (
    sensorSism1 := new SensorSism(1, -16.294444, -71.408889, 5800, true, 2023, 11, 11);
    sensorSism2 := new SensorSism(1, -16.290000, -71.408600, 5793, true, 2023, 11, 11);
    sensorGeoterm1 := new SensorGeoterm(2, -16.294444, -71.408889, 5802, true, 2023, 11, 11);
    sensorGeoterm2 := new SensorGeoterm(2, -16.270000, -71.409000, 5806, true, 2023, 11, 11);
    volcan1 := new Volcan(1, "Misti");

    volcan1.AgregarSensorGeoterm(sensorGeoterm1);
    volcan1.AgregarSensorGeoterm(sensorGeoterm2);
    volcan1.AgregarSensorSism(sensorSism1);
    volcan1.AgregarSensorSism(sensorSism2);

    monitor := new Monitor(1, volcan1);

    sensorSism1.AgregarMagnitudTiempo(0, 0);
    sensorSism2.AgregarMagnitudTiempo(0, 0);
    sensorGeoterm1.AgregarRegistroTemperatura(300, 0);
    sensorGeoterm2.AgregarRegistroTemperatura(300, 0);
  );

  public initMuyActivo: () ==> ()
  initMuyActivo() == (
    sensorSism1 := new SensorSism(1, -16.294444, -71.408889, 5800, true, 2023, 11, 11);
    sensorSism2 := new SensorSism(1, -16.290000, -71.408600, 5793, true, 2023, 11, 11);
    sensorGeoterm1 := new SensorGeoterm(2, -16.294444, -71.408889, 5802, true, 2023, 11, 11);
    sensorGeoterm2 := new SensorGeoterm(2, -16.270000, -71.409000, 5806, true, 2023, 11, 11);
    volcan1 := new Volcan(1, "Misti");
    
    volcan1.AgregarSensorGeoterm(sensorGeoterm1);
    volcan1.AgregarSensorGeoterm(sensorGeoterm2);
    volcan1.AgregarSensorSism(sensorSism1);
    volcan1.AgregarSensorSism(sensorSism2);

    monitor := new Monitor(1, volcan1);

    sensorSism1.AgregarMagnitudTiempo(4.1, 86400000000);
    sensorSism1.AgregarMagnitudTiempo(5.1, 86400000000);
    sensorSism1.AgregarMagnitudTiempo(6.1, 86400000000);
    sensorSism1.AgregarMagnitudTiempo(7.1, 86400000000);
    sensorSism1.AgregarMagnitudTiempo(1, 86400000000);
    sensorSism1.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism1.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism1.AgregarMagnitudTiempo(4, 86400000000);
    
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4, 86400000000);

    sensorGeoterm1.AgregarRegistroTemperatura(300, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(300, 86400000000);
  );
  private testGeneral: () ==> ()
  testGeneral() == (
-----------+++++++++++++++++++++++++++++++++++++
  -- if magnitudSism = <grandesTerremotos> or
  --    magnitudSism = <terremotosMuyGrandes> or
  --    magnitudSism = <terremotosMayores> or
  --    magnitudSism = <terremotosFuertes>
  -- then
  --   return <Emergencia>
  
    initMuyActivo();
    sensorSism1.AgregarMagnitudTiempo(8.5, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(8.4, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(303, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(300, 86400000000);
    monitor.ActualizarEstado();
  -- elseif cambioTemperatura = <Brusco> then
  --   if actividad = <muyActivo> then
  --     if magnitudSism = <noterremoto> then
  --       return <Peligro>
    initMuyActivo();
    sensorSism1.AgregarMagnitudTiempo(0.2, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(0.3, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(400, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(400, 86400000000);
    monitor.ActualizarEstado();
  --     else
  --       return <Evacuacion>
    initMuyActivo();
    sensorSism1.AgregarMagnitudTiempo(3.5, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(3.4, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(400, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(400, 86400000000);
    monitor.ActualizarEstado();
  --   elseif magnitudSism = <terremotosModerados> then
  --     return <Evacuacion>
    initPocoActivo();
    sensorSism1.AgregarMagnitudTiempo(4.5, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4.4, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(400, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(400, 86400000000);
    monitor.ActualizarEstado();
  --   else
  --     return <Peligro>
    initPocoActivo();
    sensorSism1.AgregarMagnitudTiempo(3.5, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(3.4, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(400, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(400, 86400000000);
    monitor.ActualizarEstado();
  -- elseif actividad = <muyActivo> then
  --   if magnitudSism = <terremotosModerados> then
  --     return <Evacuacion>
    initMuyActivo();
    sensorSism1.AgregarMagnitudTiempo(4.5, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4.4, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(300, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(300, 86400000000);
    monitor.ActualizarEstado();
  --   else
  --     return <Peligro>
    initMuyActivo();
    sensorSism1.AgregarMagnitudTiempo(3.5, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(3.4, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(300, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(300, 86400000000);
    monitor.ActualizarEstado();
  -- elseif magnitudSism = <terremotosModerados> then
  --   return <Peligro>
  
    initPocoActivo();
    sensorSism1.AgregarMagnitudTiempo(4.5, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(4.4, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(300, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(300, 86400000000);
    monitor.ActualizarEstado();
  -- elseif magnitudSism = <noterremoto> then
  --   return <Normal>
    initPocoActivo();
    sensorSism1.AgregarMagnitudTiempo(0.3, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(0.2, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(300, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(300, 86400000000);
    monitor.ActualizarEstado();
  -- else
  --   return <Precaucion>
  
    initPocoActivo();
    sensorSism1.AgregarMagnitudTiempo(3.5, 86400000000);
    sensorSism2.AgregarMagnitudTiempo(3.4, 86400000000);
    sensorGeoterm1.AgregarRegistroTemperatura(301, 86400000000);
    sensorGeoterm2.AgregarRegistroTemperatura(302, 86400000000);
    monitor.ActualizarEstado();

    id:= monitor.GetID();
    sensorSismMagnitud:= sensorSism1.GetEstadoActual();
    sensorSismactividad:= sensorSism1.GetActividad();
    sensorGeoterm:= sensorGeoterm1.GetCambioTemperatura();
    volcanNombre:= volcan1.GetNombre();
    monitorEstadoAlarma:= monitor.GetAlarma();
    id:= sensorSism2.GetID();
    sensorUbicacion:= sensorSism2.GetUbicacion();
    sensorDate:= sensorSism2.GetDate();
    volcan1:= monitor.GetVolcan();
    id:= volcan1.GetID();
  );
end Test
