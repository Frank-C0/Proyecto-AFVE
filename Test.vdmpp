-- /**
--   Test.

--   <p>
--   description
--   </p>

--   @version
--   @author
-- */

-- class Test

-- types

-- values

-- instance variables

--   sensorSism1: SensorSism;
--   sensorSism2: SensorSism;

-- operations

-- -- constructor for Test
-- -- public Test: () ==> Test
-- -- Test() == ();
--   public run: () ==> System`String
--   run() == test();

--   public test: () ==> System`String
--   test() == (
    
--   );
--   public TestSismGeoterm: () ==> ()
--   TestSismGeoterm() == (
--     sensorSism1 := new SensorSism()
--     sensorSism2
--   )

-- functions

-- end Test
-- TestSensorSism.vdmpp

class Test

instance variables

  sensorSism1: SensorSism;
  sensorSism2: SensorSism;
  magnitudSensorSism: SensorSism`MagnitudSismo;
  actividadSensorSism: SensorSism`EstadoSism;


  sensorGeoterm1: SensorGeoterm;


  volcan1: Volcan;

  operations

    public Run: () ==> ()
    Run() ==
      (
        testSensorSism();
        TestSensorGeoTerm();
        TestVolcan();
        -- Agrega más pruebas según sea necesario
      );

    private testSensorSism: () ==> ()
    testSensorSism() ==
      (
        sensorSism1 := new SensorSism(1, 0.0, 0.0, 0.0, true, 2023, 11, 11);
        -- dcl tiempo: SensorSism`POSIX_Time := 12345; -- Sustituye esto con el tiempo real
        -- dcl magnitud: real := 5.0;

        sensorSism1.AgregarMagnitudTiempo(0.1, 0);
        sensorSism1.AgregarMagnitudTiempo(0.6, 86400000000);
        sensorSism1.AgregarMagnitudTiempo(3.5, 86400010001);
        sensorSism1.AgregarMagnitudTiempo(4.5, 86400020001);
        sensorSism1.AgregarMagnitudTiempo(5.5, 86400030001);
        sensorSism1.AgregarMagnitudTiempo(6.5, 86400040001);
        sensorSism1.AgregarMagnitudTiempo(7.5, 86400050001);
        sensorSism1.AgregarMagnitudTiempo(8.5, 86400060001);
        sensorSism1.AgregarMagnitudTiempo(9.5, 86400070001);
        sensorSism1.AgregarMagnitudTiempo(10.5, 86400080001);

        
        -- assertEqual(sensorSism1.GetMagnitudActual(), <);

        -- sensorSism1.GetMagnitudes();
        -- sensorSism1.GetActividad();
        -- -- sensorSism1.HoraASegundos();
        -- sensorSism1.GetEstadoActual();
        -- sensorSism1.GetMagnitudActual();
        -- -- Añade más aserciones según sea necesario
      );

      public TestSensorGeoTerm: () ==> ()
      TestSensorGeoTerm() == (
        sensorGeoterm1 := new SensorGeoterm(2, 0.0, 0.0, 0.0, true, 2023, 11, 11);

        sensorGeoterm1.AgregarRegistroTemperatura(200, 0);
        sensorGeoterm1.AgregarRegistroTemperatura(300, 86400000000);
        sensorGeoterm1.AgregarRegistroTemperatura(400, 86401000000);
        sensorGeoterm1.AgregarRegistroTemperatura(500, 86402000000);
      );

      -- Exec: (a) ==> ()
      -- Exec(a) ==
      --   skip;
      public TestVolcan: () ==> ()
      TestVolcan() == (
        volcan1 := new Volcan(1, "Misti");
        volcan1.AgregarSensorGeoterm(sensorGeoterm1);
        volcan1.AgregarSensorSism(sensorSism1);
      )

end Test
